import java.nio.file.Paths

plugins {
    id 'com.dorongold.task-tree' version '1.5'
}

String CUCUMBER_VERSION = '5.7.0'

allprojects {
    group 'galvi.cucumber'
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        testCompile group: 'io.cucumber', name: 'cucumber-java', version: CUCUMBER_VERSION
        testCompile group: 'io.cucumber', name: 'cucumber-picocontainer', version: CUCUMBER_VERSION
    }

    // Copy feature files to all projects except CommonFeatures
    if (!((it as Project).name == 'CommonFeatures')) {
        task copyFeatures(type: Sync) {
            final String dstDir = 'src/test/resources/cucumber/common'
            doFirst {
                new File(dstDir).eachFileRecurse {
                    it.setWritable(true)
                }
            }
            from Paths.get(project(':CommonFeatures').projectDir.path, 'src/test/resources/')
            into dstDir
            doLast {
                new File(dstDir).eachFileRecurse {
                    it.setReadOnly()
                }
            }
        }

        processTestResources.dependsOn(copyFeatures)

        clean {
            delete('src/test/resources/cucumber/common')
        }

        /** Test Runner
         * @param cucumberTags (String) cucumber tags for run. Example: '@primaryDefault and @other'
         * @param cucumberArgs (List<String>) additional cucumber args. Example: ['--threads', '2']
         */
        ext.cucumberTestRunner = {
            cucumberTags = '', cucumberArgs = [] ->
                println("\n\nRun tests with tags: ${cucumberTags}")
                if (!cucumberArgs.isEmpty()) {
                    println("Additional args: ${cucumberArgs.toString()}")
                }

                String additionalTags = cucumberTags ? " and ${cucumberTags}" : ''

                javaexec {
                    main = 'io.cucumber.core.cli.Main'
                    classpath += files(configurations.testRuntime.files, sourceSets.test.output.getFiles(), sourceSets.main.output.getFiles())
                    args = cucumberArgs +
                            ['--tags', "not @ignore ${additionalTags}",
                             '--plugin', 'pretty',
                             '--monochrome',
                             '--no-strict',
                             '--glue', 'galvi',
                             '--plugin', "junit:build/reports/cucumber/${System.currentTimeMillis()}.xml",
                             '--plugin', "json:build/reports/cucumber/${System.currentTimeMillis()}.json",
                             '--plugin', 'html:build/reports/cucumber/html-report',
                             'src/test/resources/cucumber']
                    systemProperties = System.getProperties()
                }
        }
    }
}
